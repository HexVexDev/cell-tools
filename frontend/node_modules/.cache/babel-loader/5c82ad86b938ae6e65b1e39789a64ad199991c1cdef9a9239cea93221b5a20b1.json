{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HexVexDev\\\\Desktop\\\\DevProjects\\\\ImageProcessor\\\\Front\\\\front\\\\src\\\\components\\\\ImageCluster.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { HuePicker } from \"react-color\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCluster = () => {\n  _s();\n  const [initialImage, setInitialImage] = useState([]);\n  const [imgURL, setImgURL] = useState(\"\");\n  const [color, setColor] = useState({\n    hex: '#ff0500'\n  });\n  const uploadImage = () => {\n    console.log(initialImage);\n    if (initialImage && initialImage.name) {\n      const formData = new FormData();\n      formData.append(\"image\", initialImage);\n      formData.append(\"color\", color.rgb);\n      axios.post('http://127.0.0.1:8000/cluster', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => console.log(response.data)).catch(error => console.error(\"Upload error:\", error));\n    }\n  };\n  const updateImage = e => {\n    const file = e.target.files[0];\n    setInitialImage(file);\n    if (file) {\n      const previewURL = URL.createObjectURL(file);\n      setImgURL(previewURL);\n    }\n  };\n  useEffect(() => {\n    return () => {\n      if (imgURL) {\n        URL.revokeObjectURL(imgURL);\n      }\n    };\n  }, [imgURL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/png,image/jpeg\",\n      onChange: e => updateImage(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), initialImage && initialImage.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(HuePicker, {\n        color: color,\n        onChange: updatedColor => {\n          setColor(updatedColor);\n          console.log(color);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: `5px solid ${color.hex}`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgURL ? imgURL : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(initialImage),\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageCluster, \"Wxna/quXowtWwzcBeR3YybNy21I=\");\n_c = ImageCluster;\nexport default ImageCluster;\nvar _c;\n$RefreshReg$(_c, \"ImageCluster\");","map":{"version":3,"names":["useState","useEffect","axios","HuePicker","jsxDEV","_jsxDEV","ImageCluster","_s","initialImage","setInitialImage","imgURL","setImgURL","color","setColor","hex","uploadImage","console","log","name","formData","FormData","append","rgb","post","headers","then","response","data","catch","error","updateImage","e","file","target","files","previewURL","URL","createObjectURL","revokeObjectURL","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","updatedColor","style","border","src","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HexVexDev/Desktop/DevProjects/ImageProcessor/Front/front/src/components/ImageCluster.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { HuePicker } from \"react-color\";\r\n\r\n\r\nconst ImageCluster = () => {\r\n\r\n    const [initialImage, setInitialImage] = useState([]);\r\n    const [imgURL, setImgURL] = useState(\"\");\r\n    const [color, setColor] = useState({\r\n        hex: '#ff0500'\r\n    })\r\n\r\n\r\n    const uploadImage = () => {\r\n        console.log(initialImage)\r\n        if (initialImage && initialImage.name) {\r\n            const formData = new FormData();\r\n            formData.append(\"image\", initialImage);\r\n            formData.append(\"color\", color.rgb)\r\n\r\n            axios.post('http://127.0.0.1:8000/cluster', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            }).then((response) => console.log(response.data))\r\n                .catch((error) => console.error(\"Upload error:\", error));\r\n        }\r\n    }\r\n\r\n    const updateImage = (e) => {\r\n        const file = e.target.files[0];\r\n        setInitialImage(file);\r\n        if (file) {\r\n            const previewURL = URL.createObjectURL(file);\r\n            setImgURL(previewURL);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (imgURL) {\r\n                URL.revokeObjectURL(imgURL);\r\n            }\r\n        };\r\n    }, [imgURL]);\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" accept=\"image/png,image/jpeg\" onChange={(e) => updateImage(e)} />\r\n            \r\n            {initialImage && initialImage.name ?\r\n                <div>\r\n                    <HuePicker\r\n                        color={color}\r\n                        onChange={updatedColor => { setColor(updatedColor); console.log(color) }}\r\n                    />\r\n                    <div style={{ border: `5px solid ${color.hex}` }}>\r\n                        <img src={imgURL ? imgURL : null} />\r\n                    </div>\r\n                </div>\r\n                :\r\n                <p>No image</p>\r\n            }\r\n            <button onClick={() => console.log(initialImage)}>Upload</button>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageCluster;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}