{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HexVexDev\\\\Desktop\\\\DevProjects\\\\ImageProcessor\\\\Front\\\\front\\\\src\\\\components\\\\ImageCluster.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport '../styles/imgIntensity.css';\nimport { FileUploader } from \"react-drag-drop-files\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCluster = () => {\n  _s();\n  const fileTypes = [\"JPG\", \"PNG\", \"JPEG\"];\n  const [file, setFile] = useState(null);\n  const [imgURL, setImgURL] = useState(\"\");\n  const [cluster, setCluster] = useState(0);\n  const [images, setImages] = useState([]);\n  const uploadImage = () => {\n    if (file && file.name) {\n      const formData = new FormData();\n      formData.append(\"clusters\", cluster);\n      formData.append(\"image\", file);\n      for (const pair of formData.entries()) {\n        console.log(pair[0], pair[1]);\n      }\n      axios.post('http://127.0.0.1:8000/cluster', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        setImages(response.data);\n        console.log(response.data);\n      }).catch(error => console.error(\"Upload error:\", error));\n    }\n  };\n  const updateImage = file => {\n    setImages([]);\n    setFile(file);\n    if (file) {\n      const previewURL = URL.createObjectURL(file);\n      setImgURL(previewURL);\n    }\n  };\n  useEffect(() => {\n    return () => {\n      if (imgURL) {\n        URL.revokeObjectURL(imgURL);\n      }\n    };\n  }, [imgURL]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"img-intensity-container\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"img-upload\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(FileUploader, {\n          handleChange: updateImage,\n          name: \"file\",\n          types: fileTypes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: file && file.name ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgURL ? imgURL : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => setCluster(e.target.value),\n          min: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: uploadImage,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: images.length > 0 ? images.map(image => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.image_base64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageCluster, \"HG3/YP72v0tJcQ7xK8CHwYsRSGU=\");\n_c = ImageCluster;\nexport default ImageCluster;\nvar _c;\n$RefreshReg$(_c, \"ImageCluster\");","map":{"version":3,"names":["useState","useEffect","axios","Col","Container","Row","FileUploader","jsxDEV","_jsxDEV","ImageCluster","_s","fileTypes","file","setFile","imgURL","setImgURL","cluster","setCluster","images","setImages","uploadImage","name","formData","FormData","append","pair","entries","console","log","post","headers","then","response","data","catch","error","updateImage","previewURL","URL","createObjectURL","revokeObjectURL","className","children","align","handleChange","types","fileName","_jsxFileName","lineNumber","columnNumber","src","type","onChange","e","target","value","min","onClick","length","map","image","image_base64","_c","$RefreshReg$"],"sources":["C:/Users/HexVexDev/Desktop/DevProjects/ImageProcessor/Front/front/src/components/ImageCluster.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport {Col, Container, Row} from 'react-bootstrap';\r\nimport '../styles/imgIntensity.css'\r\nimport {FileUploader} from \"react-drag-drop-files\";\r\n\r\n\r\n\r\nconst ImageCluster = () => {\r\n\r\n    const fileTypes = [\"JPG\",\"PNG\",\"JPEG\"];\r\n    const [file,setFile] = useState(null);\r\n    \r\n    const [imgURL, setImgURL] = useState(\"\");\r\n    const[cluster,setCluster] = useState(0);\r\n    const [images,setImages] = useState([]);\r\n\r\n\r\n\r\n    const uploadImage = () => {\r\n        \r\n        if (file && file.name) {\r\n            const formData = new FormData();\r\n            formData.append(\"clusters\",cluster)\r\n            formData.append(\"image\", file);\r\n            for (const pair of formData.entries()) {\r\n                console.log(pair[0], pair[1]);\r\n              }\r\n            axios.post('http://127.0.0.1:8000/cluster', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            }).then((response) => {setImages(response.data);console.log(response.data)})\r\n                .catch((error) => console.error(\"Upload error:\", error));\r\n        }\r\n    }\r\n\r\n    const updateImage = (file) => {\r\n        setImages([]);\r\n        setFile(file);\r\n        if (file) {\r\n            const previewURL = URL.createObjectURL(file);\r\n            setImgURL(previewURL);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (imgURL) {\r\n                URL.revokeObjectURL(imgURL);\r\n            }\r\n        };\r\n    }, [imgURL]);\r\n\r\n    return (\r\n        <Container className=\"img-intensity-container\">\r\n            <Row>\r\n             <Col className=\"img-upload\" align=\"center\">\r\n                <FileUploader handleChange={updateImage} name=\"file\" types={fileTypes}/>\r\n             </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {file && file.name ?\r\n                        <img src={imgURL ? imgURL : null} />\r\n                        :\r\n                        <p>No image</p>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                <input type=\"number\" onChange={(e)=>setCluster(e.target.value)} min=\"1\"/>\r\n                <button onClick={ uploadImage}>Upload</button>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            {images.length>0 ? (\r\n                images.map((image)=>\r\n                    <Col>\r\n                    <img src={image.image_base64} />\r\n                    </Col> \r\n                )\r\n            ):(\r\n                <Col>\r\n                    <p>No response</p>\r\n                </Col>\r\n            )}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default ImageCluster;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,GAAG,EAAEC,SAAS,EAAEC,GAAG,QAAO,iBAAiB;AACnD,OAAO,4BAA4B;AACnC,SAAQC,YAAY,QAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAMC,SAAS,GAAG,CAAC,KAAK,EAAC,KAAK,EAAC,MAAM,CAAC;EACtC,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAErC,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAK,CAACgB,OAAO,EAACC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACkB,MAAM,EAACC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAIvC,MAAMoB,WAAW,GAAGA,CAAA,KAAM;IAEtB,IAAIR,IAAI,IAAIA,IAAI,CAACS,IAAI,EAAE;MACnB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAACR,OAAO,CAAC;MACnCM,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEZ,IAAI,CAAC;MAC9B,KAAK,MAAMa,IAAI,IAAIH,QAAQ,CAACI,OAAO,CAAC,CAAC,EAAE;QACnCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;MAC/B;MACFvB,KAAK,CAAC2B,IAAI,CAAC,+BAA+B,EAAEP,QAAQ,EAAE;QAClDQ,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAACb,SAAS,CAACa,QAAQ,CAACC,IAAI,CAAC;QAACN,OAAO,CAACC,GAAG,CAACI,QAAQ,CAACC,IAAI,CAAC;MAAA,CAAC,CAAC,CACvEC,KAAK,CAAEC,KAAK,IAAKR,OAAO,CAACQ,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC,CAAC;IAChE;EACJ,CAAC;EAED,MAAMC,WAAW,GAAIxB,IAAI,IAAK;IAC1BO,SAAS,CAAC,EAAE,CAAC;IACbN,OAAO,CAACD,IAAI,CAAC;IACb,IAAIA,IAAI,EAAE;MACN,MAAMyB,UAAU,GAAGC,GAAG,CAACC,eAAe,CAAC3B,IAAI,CAAC;MAC5CG,SAAS,CAACsB,UAAU,CAAC;IACzB;EACJ,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACT,IAAIa,MAAM,EAAE;QACRwB,GAAG,CAACE,eAAe,CAAC1B,MAAM,CAAC;MAC/B;IACJ,CAAC;EACL,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACIN,OAAA,CAACJ,SAAS;IAACqC,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBAC1ClC,OAAA,CAACH,GAAG;MAAAqC,QAAA,eACHlC,OAAA,CAACL,GAAG;QAACsC,SAAS,EAAC,YAAY;QAACE,KAAK,EAAC,QAAQ;QAAAD,QAAA,eACvClC,OAAA,CAACF,YAAY;UAACsC,YAAY,EAAER,WAAY;UAACf,IAAI,EAAC,MAAM;UAACwB,KAAK,EAAElC;QAAU;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNzC,OAAA,CAACH,GAAG;MAAAqC,QAAA,eACAlC,OAAA,CAACL,GAAG;QAAAuC,QAAA,EACC9B,IAAI,IAAIA,IAAI,CAACS,IAAI,gBACdb,OAAA;UAAK0C,GAAG,EAAEpC,MAAM,GAAGA,MAAM,GAAG;QAAK;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEpCzC,OAAA;UAAAkC,QAAA,EAAG;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNzC,OAAA,CAACH,GAAG;MAAAqC,QAAA,eACAlC,OAAA,CAACL,GAAG;QAAAuC,QAAA,gBACJlC,OAAA;UAAO2C,IAAI,EAAC,QAAQ;UAACC,QAAQ,EAAGC,CAAC,IAAGpC,UAAU,CAACoC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UAACC,GAAG,EAAC;QAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACzEzC,OAAA;UAAQiD,OAAO,EAAGrC,WAAY;UAAAsB,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNzC,OAAA,CAACH,GAAG;MAAAqC,QAAA,EACHxB,MAAM,CAACwC,MAAM,GAAC,CAAC,GACZxC,MAAM,CAACyC,GAAG,CAAEC,KAAK,iBACbpD,OAAA,CAACL,GAAG;QAAAuC,QAAA,eACJlC,OAAA;UAAK0C,GAAG,EAAEU,KAAK,CAACC;QAAa;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CACT,CAAC,gBAEDzC,OAAA,CAACL,GAAG;QAAAuC,QAAA,eACAlC,OAAA;UAAAkC,QAAA,EAAG;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB,CAAC;AAAAvC,EAAA,CAnFKD,YAAY;AAAAqD,EAAA,GAAZrD,YAAY;AAoFlB,eAAeA,YAAY;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}