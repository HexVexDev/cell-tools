{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HexVexDev\\\\Desktop\\\\DevProjects\\\\ImageProcessor\\\\Front\\\\front\\\\src\\\\components\\\\ImageCluster.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { HuePicker } from \"react-color\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCluster = () => {\n  _s();\n  const [initialImage, setInitialImage] = useState([]);\n  const [imgURL, setImgURL] = useState(\"\");\n  const [segmentedImage, setSegmentedImage] = useState([]);\n  const [elbowGraph, setElbowGraph] = useState([]);\n  const [binaryMask, setBinaryMask] = useState([]);\n  const [ripleysK, setRipleysK] = useState([]);\n  const [accumulationIndex, setAccumulationIndex] = useState(0);\n  const [imageResults, setImageResults] = useState([]);\n  const [color, setColor] = useState({\n    hex: '#ff0500'\n  });\n  const uploadImage = () => {\n    console.log(initialImage);\n    if (initialImage && initialImage.name) {\n      const formData = new FormData();\n      formData.append(\"image\", initialImage);\n      axios.post('http://127.0.0.1:8000/cluster', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => console.log(response.data)).catch(error => console.error(\"Upload error:\", error));\n    }\n  };\n  const updateImage = e => {\n    const file = e.target.files[0];\n    setInitialImage(file);\n    if (file) {\n      const previewURL = URL.createObjectURL(file);\n      setImgURL(previewURL);\n    }\n  };\n  useEffect(() => {\n    return () => {\n      if (imgURL) {\n        URL.revokeObjectURL(imgURL);\n      }\n    };\n  }, [imgURL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/png,image/jpeg\",\n      onChange: e => updateImage(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(initialImage),\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(HuePicker, {\n      color: color,\n      onChange: updatedColor => {\n        setColor(updatedColor);\n        console.log(color);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: `5px solid ${color.hex}`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgURL ? imgURL : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageCluster, \"ljz4/EajCi9eH+g45vFC4tU0xGo=\");\n_c = ImageCluster;\nexport default ImageCluster;\nvar _c;\n$RefreshReg$(_c, \"ImageCluster\");","map":{"version":3,"names":["useState","useEffect","axios","HuePicker","jsxDEV","_jsxDEV","ImageCluster","_s","initialImage","setInitialImage","imgURL","setImgURL","segmentedImage","setSegmentedImage","elbowGraph","setElbowGraph","binaryMask","setBinaryMask","ripleysK","setRipleysK","accumulationIndex","setAccumulationIndex","imageResults","setImageResults","color","setColor","hex","uploadImage","console","log","name","formData","FormData","append","post","headers","then","response","data","catch","error","updateImage","e","file","target","files","previewURL","URL","createObjectURL","revokeObjectURL","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","updatedColor","style","border","src","_c","$RefreshReg$"],"sources":["C:/Users/HexVexDev/Desktop/DevProjects/ImageProcessor/Front/front/src/components/ImageCluster.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { HuePicker     } from \"react-color\";\r\n\r\n\r\nconst ImageCluster =()=>{\r\n\r\n    const [initialImage,setInitialImage] = useState([]);\r\n    const[imgURL,setImgURL] = useState(\"\");\r\n    const [segmentedImage,setSegmentedImage] = useState([]);\r\n    const [elbowGraph, setElbowGraph] = useState([]);\r\n    const [binaryMask, setBinaryMask] = useState([]);\r\n    const [ripleysK, setRipleysK] = useState([]);\r\n    const [accumulationIndex, setAccumulationIndex] = useState(0);\r\n\r\n    const [imageResults,setImageResults] = useState([]);\r\n    const [color,setColor] = useState({\r\n        hex:'#ff0500'\r\n    })\r\n\r\n\r\n    const uploadImage = () =>{\r\n        console.log(initialImage)\r\n        if (initialImage && initialImage.name) {\r\n            const formData = new FormData();\r\n            formData.append(\"image\", initialImage);\r\n    \r\n            axios.post('http://127.0.0.1:8000/cluster', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            }).then((response) => console.log(response.data))\r\n              .catch((error) => console.error(\"Upload error:\", error));\r\n        }\r\n    }\r\n\r\n    const updateImage = (e) =>{\r\n        const file = e.target.files[0];\r\n        setInitialImage(file);\r\n\r\n    \r\n        if (file) {\r\n            const previewURL = URL.createObjectURL(file);\r\n            setImgURL(previewURL);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (imgURL) {\r\n                URL.revokeObjectURL(imgURL);\r\n            }\r\n        };\r\n    }, [imgURL]);\r\n\r\n    return(\r\n    <div>\r\n        <input type=\"file\" accept=\"image/png,image/jpeg\"  onChange={(e)=>updateImage(e)}/>\r\n        <button onClick={()=>console.log(initialImage)}>Upload</button>\r\n\r\n        <HuePicker     \r\n            color={color}\r\n            onChange={updatedColor => {setColor(updatedColor);console.log(color)}}\r\n        />\r\n        <div style={{ border:`5px solid ${color.hex}` }}>\r\n            <img src={imgURL ? imgURL : null}/>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default ImageCluster;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}