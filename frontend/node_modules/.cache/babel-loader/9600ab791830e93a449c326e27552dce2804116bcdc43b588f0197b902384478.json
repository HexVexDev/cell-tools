{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HexVexDev\\\\Desktop\\\\DevProjects\\\\ImageProcessor\\\\Front\\\\front\\\\src\\\\components\\\\ImageCluster.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { HuePicker } from \"react-color\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCluster = () => {\n  _s();\n  const [initialImage, setInitialImage] = useState([]);\n  const [imgURL, setImgURL] = useState(\"\");\n  const [cluster, setCluster] = useState(0);\n  const [images, setImages] = useState([]);\n  const uploadImage = () => {\n    if (initialImage && initialImage.name) {\n      const formData = new FormData();\n      formData.append(\"clusters\", cluster);\n      formData.append(\"image\", initialImage);\n      for (const pair of formData.entries()) {\n        console.log(pair[0], pair[1]);\n      }\n      axios.post('http://127.0.0.1:8000/cluster', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        setImages(response.data.img_results);\n        console.log(response.data.img_results);\n      }).catch(error => console.error(\"Upload error:\", error));\n    }\n  };\n  const updateImage = e => {\n    const file = e.target.files[0];\n    setInitialImage(file);\n    if (file) {\n      const previewURL = URL.createObjectURL(file);\n      setImgURL(previewURL);\n    }\n  };\n  useEffect(() => {\n    return () => {\n      if (imgURL) {\n        URL.revokeObjectURL(imgURL);\n      }\n    };\n  }, [imgURL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/png,image/jpeg\",\n      onChange: e => updateImage(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), initialImage && initialImage.name ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgURL ? imgURL : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: e => setCluster(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadImage,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), images.length > 0 ? images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: image.image_base64\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.image_base64,\n        width: \"500\",\n        height: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no response yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageCluster, \"P+8ci8CAQgNP1XeF2rJ5irU4udg=\");\n_c = ImageCluster;\nexport default ImageCluster;\nvar _c;\n$RefreshReg$(_c, \"ImageCluster\");","map":{"version":3,"names":["useState","useEffect","axios","HuePicker","jsxDEV","_jsxDEV","ImageCluster","_s","initialImage","setInitialImage","imgURL","setImgURL","cluster","setCluster","images","setImages","uploadImage","name","formData","FormData","append","pair","entries","console","log","post","headers","then","response","data","img_results","catch","error","updateImage","e","file","target","files","previewURL","URL","createObjectURL","revokeObjectURL","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","value","onClick","length","map","image","image_base64","width","height","_c","$RefreshReg$"],"sources":["C:/Users/HexVexDev/Desktop/DevProjects/ImageProcessor/Front/front/src/components/ImageCluster.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { HuePicker } from \"react-color\";\r\n\r\n\r\nconst ImageCluster = () => {\r\n\r\n    const [initialImage, setInitialImage] = useState([]);\r\n    const [imgURL, setImgURL] = useState(\"\");\r\n    const[cluster,setCluster] = useState(0);\r\n    const [images,setImages] = useState([]);\r\n\r\n\r\n    const uploadImage = () => {\r\n        \r\n        if (initialImage && initialImage.name) {\r\n            const formData = new FormData();\r\n            formData.append(\"clusters\",cluster)\r\n            formData.append(\"image\", initialImage);\r\n            for (const pair of formData.entries()) {\r\n                console.log(pair[0], pair[1]);\r\n              }\r\n            axios.post('http://127.0.0.1:8000/cluster', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            }).then((response) => {setImages(response.data.img_results);console.log(response.data.img_results)})\r\n                .catch((error) => console.error(\"Upload error:\", error));\r\n        }\r\n    }\r\n\r\n    const updateImage = (e) => {\r\n        const file = e.target.files[0];\r\n        setInitialImage(file);\r\n        if (file) {\r\n            const previewURL = URL.createObjectURL(file);\r\n            setImgURL(previewURL);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (imgURL) {\r\n                URL.revokeObjectURL(imgURL);\r\n            }\r\n        };\r\n    }, [imgURL]);\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" accept=\"image/png,image/jpeg\" onChange={(e) => updateImage(e)} />\r\n            {initialImage && initialImage.name ?\r\n                <img src={imgURL ? imgURL : null} />\r\n                :\r\n                <p>No image</p>\r\n            }\r\n            <input type=\"number\" onChange={(e)=>setCluster(e.target.value)}/>\r\n            <button onClick={ uploadImage}>Upload</button>\r\n            {images.length>0 ? (\r\n                images.map((image)=>\r\n                <div>\r\n                    <p>{image.image_base64}</p>\r\n                    <img src={image.image_base64} width='500' height='200'/>\r\n                </div>\r\n                    \r\n                )\r\n            ):(\r\n                <p>no response yet</p>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default ImageCluster;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAK,CAACY,OAAO,EAACC,UAAU,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACc,MAAM,EAACC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAGvC,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IAEtB,IAAIR,YAAY,IAAIA,YAAY,CAACS,IAAI,EAAE;MACnC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAACR,OAAO,CAAC;MACnCM,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEZ,YAAY,CAAC;MACtC,KAAK,MAAMa,IAAI,IAAIH,QAAQ,CAACI,OAAO,CAAC,CAAC,EAAE;QACnCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;MAC/B;MACFnB,KAAK,CAACuB,IAAI,CAAC,+BAA+B,EAAEP,QAAQ,EAAE;QAClDQ,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAACb,SAAS,CAACa,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC;QAACP,OAAO,CAACC,GAAG,CAACI,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC;MAAA,CAAC,CAAC,CAC/FC,KAAK,CAAEC,KAAK,IAAKT,OAAO,CAACS,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC,CAAC;IAChE;EACJ,CAAC;EAED,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvB,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B5B,eAAe,CAAC0B,IAAI,CAAC;IACrB,IAAIA,IAAI,EAAE;MACN,MAAMG,UAAU,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;MAC5CxB,SAAS,CAAC2B,UAAU,CAAC;IACzB;EACJ,CAAC;EAEDrC,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACT,IAAIS,MAAM,EAAE;QACR6B,GAAG,CAACE,eAAe,CAAC/B,MAAM,CAAC;MAC/B;IACJ,CAAC;EACL,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACIL,OAAA;IAAAqC,QAAA,gBACIrC,OAAA;MAAOsC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,sBAAsB;MAACC,QAAQ,EAAGX,CAAC,IAAKD,WAAW,CAACC,CAAC;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnFzC,YAAY,IAAIA,YAAY,CAACS,IAAI,gBAC9BZ,OAAA;MAAK6C,GAAG,EAAExC,MAAM,GAAGA,MAAM,GAAG;IAAK;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEpC5C,OAAA;MAAAqC,QAAA,EAAG;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEnB5C,OAAA;MAAOsC,IAAI,EAAC,QAAQ;MAACE,QAAQ,EAAGX,CAAC,IAAGrB,UAAU,CAACqB,CAAC,CAACE,MAAM,CAACe,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjE5C,OAAA;MAAQ+C,OAAO,EAAGpC,WAAY;MAAA0B,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CnC,MAAM,CAACuC,MAAM,GAAC,CAAC,GACZvC,MAAM,CAACwC,GAAG,CAAEC,KAAK,iBACjBlD,OAAA;MAAAqC,QAAA,gBACIrC,OAAA;QAAAqC,QAAA,EAAIa,KAAK,CAACC;MAAY;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B5C,OAAA;QAAK6C,GAAG,EAAEK,KAAK,CAACC,YAAa;QAACC,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC;MAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAEL,CAAC,gBAED5C,OAAA;MAAAqC,QAAA,EAAG;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAA1C,EAAA,CAlEKD,YAAY;AAAAqD,EAAA,GAAZrD,YAAY;AAmElB,eAAeA,YAAY;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}